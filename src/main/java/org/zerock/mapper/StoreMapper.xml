<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="org.zerock.mapper.StoreMapper">

	<!-- 상품등록 -->
	<insert id="addCart">
		INSERT INTO cart 
		(userid, pno, cartstock)
		VALUES 
		(#{userid}, #{pno}, #{cartstock})
	</insert>

	<insert id="insertSelectKey" useGeneratedKeys="true" keyProperty="pno" keyColumn="pno">
		INSERT INTO S_product (category, userid, title, price, stock, delivery, detail, keyword)
		VALUES (#{category}, #{userid}, #{title}, #{price}, #{stock}, #{delivery}, #{detail}, #{keyword})
	</insert>
	
	<select id="listCart" resultType ="org.zerock.domain.CartVO">
	
	select 
	c.cno as cno, 
	c.userid as userid, 
	s.pno as pno, 
	u.userid as userid, 
	c.cartstock as cartstock, 
	s.title as title, 
	s.detail as detail, 
	s.price as price, 
	(price * cartstock) money 
	from GH_User u, S_product s, cart c where u.userid = c.userid and s.pno = c.pno and c.userid = #{userid} 
	order by c.cno
	
	</select>

	<!-- 데이터 조회   -->
  	<!-- <select id="read" resultMap="storeMap" >
         SELECT 
           s.pno pno,
           s.category category,
           s.userid userid,
           s.title title,
           s.price price,
           s.stock stock,
	       s.delivery delivery,
           s.detail detail,
           s.keyword keyword,
           s.regdate regdate,
           s.updatedate updatedate,
           sf.fileName fileName,
           a.userid userid
         FROM 
           S_product s LEFT JOIN S_product_file sf ON s.pno = sf.pno
            				JOIN GH_User a ON s.userid = a.userid
         WHERE
           s.pno = #{pno}
    </select>  
 
 -->


	<!-- 데이터 수정 -->
<!--  	<update id="update">
	  	UPDATE S_product	  	
	  	SET
	  		category = #{category},
	  	    title = #{title}, 
	  	    price = #{price},
	  	    stock = #{stock},
	  	    delivery = #{delivery},
	  	    detail = #{detail},
	  	    keyword = #{keyword},
	  	    updateDate = NOW()	    
	  	WHERE
	  	    pno = #{pno} 
	</update>  -->


	<!-- 데이터 삭제 -->
<!--  	<delete id="delete">
  		DELETE FROM S_product WHERE pno = #{pno}
	</delete>  -->


 	<!-- 데이터 리스트에 담기 -->
<!--  	<select id="getList" resultType="org.zerock.domain.StoreVO">
      <![CDATA[   
	    SELECT 
	       pno pno,
           userid userid,
           title title,
           price price,
           stock stock,
	       delivery delivery,
           detail detail,
           keyword keyword,
           regdate regdate,
           updatedate updatedate
	
	     FROM S_product
	     
	     WHERE pno > 0 ORDER BY pno DESC     
      ]]>   
	</select>  -->

	<!-- 페이징 : 게시글 총 갯수 -->
	<!-- <select id="getTotalCount" resultType="int"> 
  		SELECT COUNT(*) FROM S_product
	</select>   -->
 
	<!-- 페이징 리스트 -->
<!--  	<select id="getListWithPaging" resultMap="storeMap">
      <![CDATA[    
	    SELECT 
           s.pno pno,
           s.category category,
           s.userid userid,
           s.title title,
           s.price price,
           s.stock stock,
	       s.delivery delivery,
           s.detail detail,
           s.keyword keyword,
           s.regdate regdate,
           s.updatedate updatedate,
           sf.fileName fileName
	    	
	     FROM S_product s LEFT JOIN S_product_file sf ON s.pno = sf.pno	     
	     ORDER BY pno DESC
	     
	     LIMIT #{from}, #{amount}     
      ]]>    
	</select>  -->

	<!-- 계정 삭제시 게시물 삭제 -->
 <!-- 	<delete id="removeByUserid">
		DELETE FROM S_product
		WHERE userid = #{userid}
	</delete>  -->


<!-- 
 	  <resultMap type="org.zerock.domain.StoreVO" id="storeMap">
          <id property="pno" column="pno" />
          <result property="category" column="category" />
          <result property="userid" column="userid" />
          <result property="title" column="title" />
          <result property="price" column="price" />
          <result property="stock" column="stock" />
          <result property="delivery" column="delivery" />
          <result property="detail" column="detail" />
          <result property="keyword" column="keyword" />
          <result property="regdate" column="regdate" />
          <result property="updatedate" column="updatedate" />
		  <collection property="fileName" resultMap="fileNameMap"></collection>
      </resultMap> 
           
      <resultMap type="string" id="fileNameMap">
          <result column="fileName" />
      </resultMap>  -->
</mapper>



<!--  	<insert id="insertWish">
		INSERT INTO wishlist
		(mwriter, pno)
		VALUES
		(#{mwriter}, #{pno})
	</insert>  -->
